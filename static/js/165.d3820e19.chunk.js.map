{"version":3,"file":"static/js/165.d3820e19.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","components/SearchList/SearchList.jsx","pages/Movies.jsx","services/api.js","services/defaultImg.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const Container = styled.div`\n    margin: 0 auto;\n    width: 1158px;\n`\n\nexport const Title = styled.h1`\n    display: flex;\n    justify-content: center;\n    margin: 40px 0;\n    color: #B8869B;\n    text-shadow: white 2px 0px 3px, \n        white 0px 2px 3px, \n        white -2px 0px 3px, \n        white 0px -2px 3px;\n`\nexport const List = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 48px 24px;\n    width: 100%;\n    margin-bottom: 40px;\n`\nexport const Item = styled.li`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    flex-basis: calc(25% - 18px);\n    background-color: white;\n    border-radius: 7px;\n    box-shadow: 0 2px 4px 0 rgba(14,30,37,.12), 0 2px 16px 0 rgba(14,30,37,.32);\n    transition-duration: .3s;\n    transition-timing-function: linear;\n\n    &:is(:hover) {\n        transform: scale(1.15);\n    }\n`\nexport const LinkStyled = styled(Link)`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 271px\n`\nexport const Text = styled.p`\n    text-align: center;\n    padding: 5px 0;\n    color: #557396;\n    font-size: 18px;\n`","import styled from \"styled-components\";\n\nexport const Form = styled.form`\n    margin: 40px 0;\n    display: flex;\n    justify-content: center;\n    gap: 10px;\n`\nexport const Input = styled.input`\n    font-size: 18px;\n    border-radius: 5px;\n    border: 3px solid #557396;\n    box-shadow: 0 2px 4px 0 rgba(14,30,37,.12), 0 2px 16px 0 rgba(14,30,37,.32);\n`\nexport const Btn = styled.button`\n    cursor: pointer;\n    font-size: 18px;\n    font-weight: 700;\n    border-radius: 7px;\n    border: none;\n    padding: 5px;\n    background-color: #557396;\n    color: white;\n    box-shadow: 0 2px 4px 0 rgba(14,30,37,.12), 0 2px 16px 0 rgba(14,30,37,.32);\n    transition-duration: 0.3s;\n    transition-timing-function: linear;\n\n    &:is(:hover) {\n        transform: scale(1.15);\n        background-color: #4E6887;\n    }\n`","import { Form, Input, Btn } from \"./SearchForm.styled\"\n\nconst SearchForm = ({ handleSubmit, handleChange }) => {\n  return (\n      <Form onSubmit={handleSubmit}>\n          <Input type=\"text\" onChange={handleChange} />\n          <Btn type='submit'>Search</Btn>\n    </Form>\n  )\n}\n\nexport default SearchForm","import { useLocation } from \"react-router-dom\"\nimport { defaultImg } from \"services/defaultImg\"\n\nimport { Container, List, Item, LinkStyled, Text } from \"components/MoviesList/MoviesList.styled\";\n\nconst SearchList = ({ films }) => {\n    const location = useLocation();\n    \n  return (\n      <Container>\n          <List>\n              {films.results?.map(({ id, title, poster_path }) => (\n                  <Item key={id}>\n                      <LinkStyled to={`${id}`} state={{ from: location }}>\n                        <img\n                        src={poster_path ? `https://image.tmdb.org/t/p/w500/${poster_path}` : defaultImg}\n                        alt={title}\n                        width={434}\n                        height={350}\n                        />\n                        <Text>{title}</Text>\n                        </LinkStyled>\n                  </Item>\n              ))}\n          </List>\n    </Container>\n  )\n}\n\nexport default SearchList","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByName } from 'services/api';\nimport Notiflix from 'notiflix';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport SearchList from 'components/SearchList/SearchList';\n\nconst Movies = () => {\n  const [films, setFilms] = useState([])\n  const [searchParams, setSearchParams] = useSearchParams()\n  const [searchQuery, setSearchQuery] = useState('')\n\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    const searchFilm = async () => {\n      try {\n        if (!query) return;\n        const data = await getMovieByName(query);\n        setFilms(data)\n      } catch (error) {\n        Notiflix.Notify.failure(`${error.message}`);\n      }\n    }\n    searchFilm();\n  }, [query])\n\n  const handleChange = (e) => {\n    setSearchQuery(e.target.value.toLowerCase());\n  }\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (searchQuery === '') return\n    \n    setSearchParams({ query: searchQuery });\n  }\n\n  return (\n    <>\n      <SearchForm handleSubmit={handleSubmit} handleChange={handleChange} />\n      <SearchList films={films} />\n    </>\n  )\n}\n\nexport default Movies","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a192ca0e9d8f4a140df73bfb9e7be991';\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response.data\n}\n\nexport const getMovieById = async (id) => {\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n    return response.data\n}\n\nexport const getCast = async (id) => {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n    return response.data\n}\n\nexport const getReviews = async (id) => {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n    return response.data\n}\n\nexport const getMovieByName = async (name) => {\n    const response = await axios.get(`/search/movie?query=${name}&api_key=${API_KEY}`);\n    return response.data\n}","export const defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","List","_templateObject3","Item","_templateObject4","LinkStyled","Link","_templateObject5","Text","_templateObject6","Form","Input","Btn","_ref","handleSubmit","handleChange","_jsxs","onSubmit","children","_jsx","type","onChange","_films$results","films","location","useLocation","results","map","_ref2","id","title","poster_path","to","concat","state","from","src","defaultImg","alt","width","height","_searchParams$get","_useState","useState","_useState2","_slicedToArray","setFilms","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState3","_useState4","searchQuery","setSearchQuery","query","get","useEffect","searchFilm","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","abrupt","getMovieByName","sent","t0","Notiflix","message","stop","apply","arguments","_Fragment","SearchForm","e","preventDefault","target","value","toLowerCase","SearchList","axios","API_KEY","getTrendingMovies","response","getMovieById","_callee2","_context2","_x","getCast","_ref3","_callee3","_context3","_x2","getReviews","_ref4","_callee4","_context4","_x3","_ref5","_callee5","name","_context5","_x4"],"sourceRoot":""}