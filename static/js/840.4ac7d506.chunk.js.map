{"version":3,"file":"static/js/840.4ac7d506.chunk.js","mappings":"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","sources":["pages/MovieDetails.styled.js","pages/MovieDetails.jsx","services/api.js","services/defaultImg.js"],"sourcesContent":["import { Link, NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const Container = styled.div`\n    margin: 0 auto;\n    width: 1200px;\n`\nexport const LinkStyled = styled(Link)`\n    display: block;\n    margin: 40px 0 10px;\n    font-size: 18px;\n    font-weight: 700;\n    color: white;\n    text-shadow: #557396 2px 0px 3px, \n        #557396 0px 2px 3px, \n        #557396 -2px 0px 3px, \n        #557396 0px -2px 3px;\n`\nexport const Info = styled.div`\n    display: flex;\n    gap: 50px;\n    align-items: center;\n    margin-bottom: 10px;\n`\nexport const Description = styled.div`\n    background-color: white;\n    border-radius: 7px;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    padding: 5px 10px;\n    box-shadow: 0 2px 4px 0 rgba(14,30,37,.12), 0 2px 16px 0 rgba(14,30,37,.32);\n`\nexport const Score = styled.p`\n    font-size: 18px;\n`\nexport const DescrInform = styled.h3`\n    display: flex;\n    flex-direction: column;\n    font-weight: 400;\n`\nexport const SpanStyled = styled.span`\n    font-weight: 700;\n    text-transform: capitalize;\n`\nexport const Additional = styled.p`\n    text-align: center;\n    font-size: 24px;\n    font-weight: 700;\n    color: white;\n    text-shadow: #557396 2px 0px 3px, \n        #557396 0px 2px 3px, \n        #557396 -2px 0px 3px, \n        #557396 0px -2px 3px;\n    margin-bottom: 10px;\n`\nexport const LinksList = styled.ul`\n    display: flex;\n    gap: 24px;\n    justify-content: center;\n    margin-bottom: 10px;\n`\nexport const NavLinkStyled = styled(NavLink)`\n    display: block;\n    font-size: 24px;\n    font-weight: 700;\n    color: white;\n    text-shadow: #B8869B 2px 0px 3px, \n        #B8869B 0px 2px 3px, \n        #B8869B -2px 0px 3px, \n        #B8869B 0px -2px 3px;\n    transition-duration: .3s;\n    transition-timing-function: linear;\n\n    &.active {\n        transform: scale(1.2);\n    }\n`","import { useEffect, useState, Suspense, useRef} from \"react\";\nimport { useLocation, useParams, Outlet } from \"react-router-dom\"\nimport { getMovieById } from \"services/api\"\nimport Notiflix from \"notiflix\";\nimport { defaultImg } from \"services/defaultImg\"\n\nimport { Info, Container, LinkStyled, Description, DescrInform, SpanStyled, Score, Additional, LinksList, NavLinkStyled } from \"./MovieDetails.styled\";\n\nconst MovieDetails = () => {\n    const [data, setData] = useState([])\n    const { movieId } = useParams()\n    const location = useLocation()\n    const backlink = useRef(location.state?.from ?? '/');\n\n    useEffect(() => {\n        const details = async () => {\n            if (!movieId) return;\n            try {\n                const data = await getMovieById(movieId);\n                setData(data)\n            } catch (error) {\n                Notiflix.Notify.failure(`${error.message}`);\n            }\n        }\n        details();\n    }, [movieId])\n\n    return (\n      <Container>\n        <LinkStyled to={backlink.current}>â†© Back</LinkStyled>\n        {data && (   \n        <>\n            <Info>\n                <img\n                    src={data.poster_path ? `https://image.tmdb.org/t/p/w500/${data.poster_path}` : defaultImg}\n                    alt={data.title}\n                    width={250}\n                    height={350}\n                />\n                <Description>\n                    <h2>{data.title} ({data.release_date?.slice(0, 4)})</h2>\n                    <Score><SpanStyled>User score:</SpanStyled> {Number(data.vote_average).toFixed(1) * 10}%</Score>\n                    <DescrInform><SpanStyled>Overview:</SpanStyled> {data.overview}</DescrInform>\n                    <DescrInform><SpanStyled>Genres:</SpanStyled> {data.genres?.map(({ name }) => name).join(', ')}</DescrInform>\n                </Description>\n            </Info>\n            <div>\n                <Additional>Additional information</Additional>\n                <LinksList>\n                    <li>\n                        <NavLinkStyled to='cast'>Cast</NavLinkStyled>\n                    </li>\n                    <li>\n                        <NavLinkStyled to='reviews'>Reviews</NavLinkStyled>\n                    </li>\n                </LinksList>\n                </div>\n            <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n            </Suspense>\n        </>\n        )} \n    </Container>\n  )\n}\n\nexport default MovieDetails","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a192ca0e9d8f4a140df73bfb9e7be991';\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response.data\n}\n\nexport const getMovieById = async (id) => {\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n    return response.data\n}\n\nexport const getCast = async (id) => {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n    return response.data\n}\n\nexport const getReviews = async (id) => {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n    return response.data\n}\n\nexport const getMovieByName = async (name) => {\n    const response = await axios.get(`/search/movie?query=${name}&api_key=${API_KEY}`);\n    return response.data\n}","export const defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","LinkStyled","Link","_templateObject2","Info","_templateObject3","Description","_templateObject4","Score","_templateObject5","DescrInform","_templateObject6","SpanStyled","_templateObject7","Additional","_templateObject8","LinksList","_templateObject9","NavLinkStyled","NavLink","_templateObject10","_location$state$from","_location$state","_data$release_date","_data$genres","_useState","useState","_useState2","_slicedToArray","data","setData","movieId","useParams","location","useLocation","backlink","useRef","state","from","useEffect","details","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_data","_context","prev","next","abrupt","getMovieById","sent","t0","Notiflix","concat","message","stop","apply","arguments","_jsxs","children","_jsx","to","current","_Fragment","src","poster_path","defaultImg","alt","title","width","height","release_date","slice","Number","vote_average","toFixed","overview","genres","map","_ref2","name","join","Suspense","fallback","Outlet","axios","API_KEY","getTrendingMovies","response","_callee2","id","_context2","_x","getCast","_ref3","_callee3","_context3","_x2","getReviews","_ref4","_callee4","_context4","_x3","getMovieByName","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}